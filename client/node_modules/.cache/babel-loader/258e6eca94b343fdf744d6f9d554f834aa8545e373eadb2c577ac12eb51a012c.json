{"ast":null,"code":"var _jsxFileName = \"/Users/michellekirkland/Dropbox/CodingStuff/DatingApp/datingapp/client/src/components/ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport Chat from './Chat';\nimport ChatInput from './ChatInput';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = _ref => {\n  _s();\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n  const getUsersMessages = async (senderId, recipientId) => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClickedUsersMessages = async (senderId, recipientId) => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      });\n      setClickedUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n  }, []);\n  const messages = [];\n  usersMessages === null || usersMessages === void 0 ? void 0 : usersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage['name'] = user === null || user === void 0 ? void 0 : user.first_name;\n    formattedMessage['img'] = user === null || user === void 0 ? void 0 : user.url;\n    formattedMessage['message'] = message.message;\n    formattedMessage['timestamp'] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  console.log('usersMessages', usersMessages);\n  console.log('formattedMessage', messages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"2NEB42wPVsAhSx/Wnejt8YtyMTY=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["Chat","ChatInput","axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDisplay","_ref","_s","user","clickedUser","userId","user_id","clickedUserId","usersMessages","setUsersMessages","clickedUsersMessages","setClickedUsersMessages","getUsersMessages","senderId","recipientId","response","get","params","correspondingUserId","data","error","console","log","getClickedUsersMessages","messages","forEach","message","formattedMessage","first_name","url","timestamp","push","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michellekirkland/Dropbox/CodingStuff/DatingApp/datingapp/client/src/components/ChatDisplay.js"],"sourcesContent":["import Chat from './Chat'\nimport ChatInput from './ChatInput'\nimport axios from 'axios'\nimport {useState, useEffect} from 'react'\n\nconst ChatDisplay = ({user, clickedUser}) => {\n    const userId = user?.user_id\n    const clickedUserId = clickedUser?.user_id\n    const [usersMessages, setUsersMessages] = useState(null)\n    const [clickedUsersMessages, setClickedUsersMessages] = useState(null)\n\n    const getUsersMessages = async (senderId, recipientId) => {\n        try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: {userId: userId, correspondingUserId: clickedUserId}\n            })\n            setUsersMessages(response.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const getClickedUsersMessages = async (senderId, recipientId) => {\n        try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: {userId: clickedUserId, correspondingUserId: userId}\n            })\n            setClickedUsersMessages(response.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    useEffect(() => {\n        getUsersMessages()\n        getClickedUsersMessages()\n    }, [])\n\n    const messages = []\n\n    usersMessages?.forEach(message => {\n        const formattedMessage = {}\n        formattedMessage['name'] = user?.first_name\n        formattedMessage['img'] = user?.url\n        formattedMessage['message'] = message.message\n        formattedMessage['timestamp'] = message.timestamp\n        messages.push(formattedMessage)\n    })\n\n    console.log('usersMessages', usersMessages)\n    console.log('formattedMessage', messages)\n\n    return (\n        <>\n        <Chat/>\n        <ChatInput/>\n        </>\n    )\n}\n\nexport default ChatDisplay"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,WAAW,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAACC,IAAI;IAAEC;EAAW,CAAC,GAAAH,IAAA;EACpC,MAAMI,MAAM,GAAGF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,OAAO;EAC5B,MAAMC,aAAa,GAAGH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,OAAO;EAC1C,MAAM,CAACE,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEtE,MAAMkB,gBAAgB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,WAAW,KAAK;IACtD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,gCAAgC,EAAE;QAC/DC,MAAM,EAAE;UAACZ,MAAM,EAAEA,MAAM;UAAEa,mBAAmB,EAAEX;QAAa;MAC/D,CAAC,CAAC;MACFE,gBAAgB,CAACM,QAAQ,CAACI,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,MAAMG,uBAAuB,GAAG,MAAAA,CAAOV,QAAQ,EAAEC,WAAW,KAAK;IAC7D,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,gCAAgC,EAAE;QAC/DC,MAAM,EAAE;UAACZ,MAAM,EAAEE,aAAa;UAAEW,mBAAmB,EAAEb;QAAM;MAC/D,CAAC,CAAC;MACFM,uBAAuB,CAACI,QAAQ,CAACI,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAGDzB,SAAS,CAAC,MAAM;IACZiB,gBAAgB,CAAC,CAAC;IAClBW,uBAAuB,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAG,EAAE;EAEnBhB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEiB,OAAO,CAACC,OAAO,IAAI;IAC9B,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAC3BA,gBAAgB,CAAC,MAAM,CAAC,GAAGxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyB,UAAU;IAC3CD,gBAAgB,CAAC,KAAK,CAAC,GAAGxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE0B,GAAG;IACnCF,gBAAgB,CAAC,SAAS,CAAC,GAAGD,OAAO,CAACA,OAAO;IAC7CC,gBAAgB,CAAC,WAAW,CAAC,GAAGD,OAAO,CAACI,SAAS;IACjDN,QAAQ,CAACO,IAAI,CAACJ,gBAAgB,CAAC;EACnC,CAAC,CAAC;EAEFN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEd,aAAa,CAAC;EAC3Ca,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,QAAQ,CAAC;EAEzC,oBACI3B,OAAA,CAAAE,SAAA;IAAAiC,QAAA,gBACAnC,OAAA,CAACN,IAAI;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACPvC,OAAA,CAACL,SAAS;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACV,CAAC;AAEX,CAAC;AAAAlC,EAAA,CAtDKF,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAwDjB,eAAeA,WAAW;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}