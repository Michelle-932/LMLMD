{"ast":null,"code":"var _jsxFileName = \"/Users/michellekirkland/Dropbox/CodingStuff/DatingApp/datingapp/client/src/components/PlaceList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaceList = () => {\n  _s();\n  const [placesByMetro, setPlacesByMetro] = useState([]);\n  useEffect(() => {\n    // Fetch data from the backend API\n    const fetchPlaces = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/places-by-metro'); // Replace with your backend API endpoint to get places grouped by metro area\n        setPlacesByMetro(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPlaces();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Places\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), placesByMetro.map(metro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: metro.metroArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: metro.places.map(place => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: place.street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [place.city, ', ', place.state, ', ', place.zip]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: place.url,\n            children: \"Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: place.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, place._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, metro.metroArea, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaceList, \"m+OPRpSh04lRNyGIbHYAwuQhnjE=\");\n_c = PlaceList;\nexport default PlaceList;\nvar _c;\n$RefreshReg$(_c, \"PlaceList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PlaceList","_s","placesByMetro","setPlacesByMetro","fetchPlaces","response","get","data","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","metro","metroArea","places","place","name","street","city","state","zip","href","url","description","_id","_c","$RefreshReg$"],"sources":["/Users/michellekirkland/Dropbox/CodingStuff/DatingApp/datingapp/client/src/components/PlaceList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst PlaceList = () => {\n  const [placesByMetro, setPlacesByMetro] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from the backend API\n    const fetchPlaces = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/places-by-metro'); // Replace with your backend API endpoint to get places grouped by metro area\n        setPlacesByMetro(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchPlaces();\n  }, []);\n\n  return (\n    <div>\n      <h1>List of Places</h1>\n      {placesByMetro.map((metro) => (\n        <div key={metro.metroArea}>\n          <h2>{metro.metroArea}</h2>\n          <ul>\n            {metro.places.map((place) => (\n              <li key={place._id}>\n                <h3>{place.name}</h3>\n                <p>{place.street}</p>\n                <p>{place.city}{', '}{place.state}{', '}{place.zip}</p>\n                <a href={place.url}>Website</a>\n                <p>{place.description}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PlaceList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,uCAAuC,CAAC,CAAC,CAAC;QAC3EH,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBb,aAAa,CAACc,GAAG,CAAEC,KAAK,iBACvBlB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAKM,KAAK,CAACC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BhB,OAAA;QAAAY,QAAA,EACGM,KAAK,CAACE,MAAM,CAACH,GAAG,CAAEI,KAAK,iBACtBrB,OAAA;UAAAY,QAAA,gBACEZ,OAAA;YAAAY,QAAA,EAAKS,KAAK,CAACC;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBhB,OAAA;YAAAY,QAAA,EAAIS,KAAK,CAACE;UAAM;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBhB,OAAA;YAAAY,QAAA,GAAIS,KAAK,CAACG,IAAI,EAAE,IAAI,EAAEH,KAAK,CAACI,KAAK,EAAE,IAAI,EAAEJ,KAAK,CAACK,GAAG;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvDhB,OAAA;YAAG2B,IAAI,EAAEN,KAAK,CAACO,GAAI;YAAAhB,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC/BhB,OAAA;YAAAY,QAAA,EAAIS,KAAK,CAACQ;UAAW;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GALnBK,KAAK,CAACS,GAAG;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GAZGE,KAAK,CAACC,SAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAapB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}