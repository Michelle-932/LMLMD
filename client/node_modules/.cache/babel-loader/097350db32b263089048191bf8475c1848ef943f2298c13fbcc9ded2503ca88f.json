{"ast":null,"code":"var _jsxFileName = \"/Users/michellekirkland/Dropbox/CodingStuff/DatingApp/datingapp/client/src/pages/MyPlaces.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPlaces = () => {\n  _s();\n  const [cookies] = useCookies(['userId']);\n  console.log(cookies);\n  const [savedPlaces, setSavedPlaces] = useState([]);\n  const userPlaces = saved_places.map(_ref => {\n    let {\n      user_id\n    } = _ref;\n    return user_id;\n  });\n  const userId = cookies.UserId;\n  useEffect(() => {\n    const fetchSavedPlaces = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/save-places', {\n          params: {\n            savedPlaces: JSON.stringify(userPlaces)\n          }\n        });\n        console.log(response.data);\n        setSavedPlaces(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSavedPlaces();\n  }, [userId]);\n\n  // useEffect(() => {\n  //   // Fetch logged-in user's data and saved places from the backend API\n  //   const fetchData = async () => {\n  //     try {\n  //       const userDataResponse = await axios.get(`http://localhost:8000/user?userId=${cookies.userId}`)\n  //       setUser(userDataResponse.data)\n  //       console.log(\"User data response:\", userDataResponse.data)\n\n  //       if (userDataResponse.data && userDataResponse.data.saved_places) {\n  //         const placeIds = userDataResponse.data.saved_places\n  //         const placePromises = placeIds.map((placeId) => {\n  //           return axios.get(`http://localhost:8000/save-places/${placeId}`)\n  //         })\n\n  //         const placesResponse = await Promise.all(placePromises)\n  //         const placeDetails = placesResponse.map((response) => response.data)\n  //         console.log(\"Saved places:\", placeDetails)\n  //         setSavedPlaces(placeDetails)\n  //       } else {\n  //         // User data or saved places not available\n  //         setSavedPlaces([])\n  //       }\n  //     } catch (error) {\n  //       console.log(\"Error fetching data:\", error)\n  //     }\n  //   }\n\n  //   fetchData()\n  // }, [cookies.userId])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Saved Places\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), savedPlaces.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: place.place_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: place.place_street\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [place.place_city, \", \", place.place_state, \" \", place.place_zip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: place.place_url,\n        children: \"Website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: place.place_about\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, place._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPlaces, \"5/7F6DEchx4eopZJ7G4xS4wjHYU=\", false, function () {\n  return [useCookies];\n});\n_c = MyPlaces;\nexport default MyPlaces;\nvar _c;\n$RefreshReg$(_c, \"MyPlaces\");","map":{"version":3,"names":["useEffect","useState","useCookies","axios","jsxDEV","_jsxDEV","MyPlaces","_s","cookies","console","log","savedPlaces","setSavedPlaces","userPlaces","saved_places","map","_ref","user_id","userId","UserId","fetchSavedPlaces","response","get","params","JSON","stringify","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","place","place_name","place_street","place_city","place_state","place_zip","href","place_url","place_about","_id","_c","$RefreshReg$"],"sources":["/Users/michellekirkland/Dropbox/CodingStuff/DatingApp/datingapp/client/src/pages/MyPlaces.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\n\nconst MyPlaces = () => {\n  const [cookies] = useCookies(['userId']);\n  console.log(cookies)\n  const [savedPlaces, setSavedPlaces] = useState([]);\n  const userPlaces = saved_places.map(({user_id}) => user_id)\n  const userId = cookies.UserId;\n\n  useEffect(() => {\n    const fetchSavedPlaces = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/save-places', {\n          params: {savedPlaces: JSON.stringify(userPlaces)}\n        })\n        console.log(response.data)\n        setSavedPlaces(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchSavedPlaces();\n  }, [userId]);\n  \n\n\n\n  // useEffect(() => {\n  //   // Fetch logged-in user's data and saved places from the backend API\n  //   const fetchData = async () => {\n  //     try {\n  //       const userDataResponse = await axios.get(`http://localhost:8000/user?userId=${cookies.userId}`)\n  //       setUser(userDataResponse.data)\n  //       console.log(\"User data response:\", userDataResponse.data)\n\n  //       if (userDataResponse.data && userDataResponse.data.saved_places) {\n  //         const placeIds = userDataResponse.data.saved_places\n  //         const placePromises = placeIds.map((placeId) => {\n  //           return axios.get(`http://localhost:8000/save-places/${placeId}`)\n  //         })\n\n  //         const placesResponse = await Promise.all(placePromises)\n  //         const placeDetails = placesResponse.map((response) => response.data)\n  //         console.log(\"Saved places:\", placeDetails)\n  //         setSavedPlaces(placeDetails)\n  //       } else {\n  //         // User data or saved places not available\n  //         setSavedPlaces([])\n  //       }\n  //     } catch (error) {\n  //       console.log(\"Error fetching data:\", error)\n  //     }\n  //   }\n\n  //   fetchData()\n  // }, [cookies.userId])\n\n  return (\n    <div>\n      <h1>List of Saved Places</h1>\n        {savedPlaces.map((place) => (\n          <div key={place._id}>\n            <h3>{place.place_name}</h3>\n            <p>{place.place_street}</p>\n            <p>\n              {place.place_city}, {place.place_state} {place.place_zip}\n            </p>\n            <a href={place.place_url}>Website</a>\n            <p>{place.place_about}</p>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nexport default MyPlaces;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}