{"ast":null,"code":"var _jsxFileName = \"/Users/michellekirkland/Dropbox/CodingStuff/DatingApp/datingapp/client/src/components/PlaceList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaceList = () => {\n  _s();\n  var _user;\n  const userId = (_user = user) === null || _user === void 0 ? void 0 : _user.user_id;\n  const [placesByMetro, setPlacesByMetro] = useState([]);\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n  useEffect(() => {\n    // Fetch data from the backend API\n    const fetchPlaces = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/places-by-metro'); // Replace with your backend API endpoint to get places grouped by metro area\n        setPlacesByMetro(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPlaces();\n  }, []);\n  const [savedPlaces, setSavedPlaces] = useState([]);\n\n  //function to toggle saved status of a place\n  const toggleSavedStatus = async placeId => {\n    setSavedPlaces(prevSavedPlaces => {\n      if (savedPlaces.includes(placeId)) {\n        return prevSavedPlaces.filter(id => id !== placeId);\n      } else {\n        return [...prevSavedPlaces, placeId];\n      }\n    });\n    try {\n      if (!ObjectId.isValid(cookies.UserId)) {\n        console.error('Invalid userId format.');\n        return;\n      }\n      await axios.post('http://localhost:8000/save-places', {\n        userId: cookies.UserId,\n        // Assuming you have the user ID available in cookies\n        savedPlaces: savedPlaces.includes(placeId) ? savedPlaces.filter(id => id !== placeId) : [...savedPlaces, placeId]\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Places\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), placesByMetro.map(metro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: metro.place_metro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: metro.places.map(place => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: place.place_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: place.place_street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [place.place_city, ', ', place.place_state, ' ', place.place_zip]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: place.place_url,\n            children: \"Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: place.place_about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => toggleSavedStatus(place._id),\n            style: {\n              cursor: 'pointer',\n              color: savedPlaces.includes(place._id) ? 'red' : 'gray '\n            },\n            children: \"\\u2764\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), savedPlaces.includes(place._id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Saved to My Places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Save to My Places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 86\n          }, this)]\n        }, place._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, metro._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaceList, \"kegqZZ0lns9Cs5qCPj6MCSAGskY=\", false, function () {\n  return [useCookies];\n});\n_c = PlaceList;\nexport default PlaceList;\nvar _c;\n$RefreshReg$(_c, \"PlaceList\");","map":{"version":3,"names":["React","useEffect","useState","axios","useCookies","jsxDEV","_jsxDEV","PlaceList","_s","_user","userId","user","user_id","placesByMetro","setPlacesByMetro","cookies","setCookie","removeCookie","fetchPlaces","response","get","data","error","console","log","savedPlaces","setSavedPlaces","toggleSavedStatus","placeId","prevSavedPlaces","includes","filter","id","ObjectId","isValid","UserId","post","children","fileName","_jsxFileName","lineNumber","columnNumber","map","metro","place_metro","places","place","place_name","place_street","place_city","place_state","place_zip","href","place_url","place_about","onClick","_id","style","cursor","color","_c","$RefreshReg$"],"sources":["/Users/michellekirkland/Dropbox/CodingStuff/DatingApp/datingapp/client/src/components/PlaceList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {useCookies} from 'react-cookie'\n\nconst PlaceList = () => {\n  const userId = user?.user_id\n  const [placesByMetro, setPlacesByMetro] = useState([]);\n  const [cookies, setCookie, removeCookie] = useCookies(null)\n\n  useEffect(() => {\n    // Fetch data from the backend API\n    const fetchPlaces = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/places-by-metro'); // Replace with your backend API endpoint to get places grouped by metro area\n        setPlacesByMetro(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchPlaces();\n  }, []);\n\n  const [savedPlaces, setSavedPlaces] = useState([]);\n\n  //function to toggle saved status of a place\n  const toggleSavedStatus = async (placeId) => {\n    setSavedPlaces((prevSavedPlaces) => {\n      if (savedPlaces.includes(placeId)) {\n        return prevSavedPlaces.filter((id) => id !== placeId);\n      } else {\n        return [...prevSavedPlaces, placeId];\n      }\n    });\n\n    try {\n      if (!ObjectId.isValid(cookies.UserId)) {\n        console.error('Invalid userId format.');\n        return;\n      }\n\n      await axios.post('http://localhost:8000/save-places', {\n        userId: cookies.UserId, // Assuming you have the user ID available in cookies\n        savedPlaces: savedPlaces.includes(placeId) ? savedPlaces.filter((id) => id !== placeId) : [...savedPlaces, placeId]\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>List of Places</h1>\n      {placesByMetro.map((metro) => (\n        <div key={metro._id}>\n          <h2>{metro.place_metro}</h2>\n          <ul>\n            {metro.places.map((place) => (\n              <li key={place._id}>\n                <h3>{place.place_name}</h3>\n                <p>{place.place_street}</p>\n                <p>{place.place_city}{', '}{place.place_state}{' '}{place.place_zip}</p>\n                <a href={place.place_url}>Website</a>\n                <p>{place.place_about}</p>\n                <span\n                  onClick={() => toggleSavedStatus(place._id)}\n                  style={{ cursor: 'pointer', color: savedPlaces.includes(place._id) ? 'red' : 'gray ' }}\n                >\n                  ❤️\n                </span>\n                {savedPlaces.includes(place._id) ? <span>Saved to My Places</span> : <span>Save to My Places</span>}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PlaceList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}